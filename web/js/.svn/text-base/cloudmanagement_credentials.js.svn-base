/*************************************************************************
 * Copyright 2009-2012 Eucalyptus Systems, Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/.
 *
 * Please contact Eucalyptus Systems, Inc., 6755 Hollister Ave., Goleta
 * CA 93117, USA or visit http://www.eucalyptus.com/licenses/ if you need
 * additional information or have any questions.
 ************************************************************************/

(function($, eucalyptus) {
  $.widget('eucalyptus.cloudmanagement_credentials', $.eucalyptus.eucawidget, {
    options : { },
    baseTable : null,
    tableWrapper : null,
    _init : function() {
      var thisObj = this;
      var $tmpl = $('html body div.templates').find('#credentialsTmpl').clone();    
      var $wrapper = $($tmpl.render($.i18n.map));
      var $configurecloud = $wrapper.children().first();
      var $help = $wrapper.children().last(); 
      
      var $instTable = $configurecloud.children('.inner-table');
      thisObj.tableWrapper = $instTable.innertable({
          id : 'cloudmanagement_credential', // user of this widget should customize these options,
          data_deps: ['cloudmanagement_credential'],
          hidden: thisObj.options['hidden'],
          dt_arg : {
            "sAjaxSource": 'cloudmanagement_credential',
            "aoColumnDefs": [
              {
                "bSortable": false,
                "aTargets":[0],
                "mData": function(source) { return '<input type="checkbox"/>'; },
                "sClass": "checkbox-cell",
              },
              {
                "aTargets":[1],
                "mData": function(source) { 
                  return source.userName;
                },
              },
              {
            	"aTargets":[2],
                "mData": function(source){
                  return source.type;
                },
              },
              {
                "aTargets":[3],
                "mData": function(source) { 
                	return source.id;
                },
              },
              {
                  "aTargets":[4],
                  "mData": function(source) { 
                  	return source.status;
                  },
                },
                {
                 "bVisible": false,
                 "aTargets":[5], 
                 "mData": "account",
              }
            ]
          },
          text : {
            create_resource : credentials_modifypassword,
            resource_found : 'record_found',
            resource_search : record_search,
            resource_plural : record_plural,
          },
          menu_click_create : function(e) {
        	  items = thisObj.tableWrapper.innertable('getSelectedRows', 1);
			  if (items.length != 1) {
				notifySuccess($.i18n.prop('error_msg_select_one', DefaultEncoder().encodeForHTML($.i18n.map.credentials_subtitle)));
				return false;
			  } 
			  thisObj.addDialog.find('#user').val(items[0]);
        	  thisObj.addDialog.eucadialog('open');
          },            
          menu_actions : function(args){
    	  	return {
				'Download' : {
					"name" : gloable_dowmload,
					callback : function(key, opt) {
						items = thisObj.tableWrapper.innertable('getSelectedRows');
						if (items.length != 1) {
							notifySuccess($.i18n.prop('error_msg_select_one', DefaultEncoder().encodeForHTML($.i18n.map.credentials_subtitle)));
							return false;
						} 
				         $.downCredential({
				             userName  : items[0].userName,
				             accountName   : items[0].account,
				             script    : 'ea.cloudmanagement.CredentialAction$download.json'
				           });
					}
				}
			};
          }
      }); //end of innertable
        

      var $wrapper = $('<div>').addClass('innertable-wrapper');
      $configurecloud.appendTo($wrapper);
      $wrapper.appendTo(this.element);
      
    },
      
    _create : function() { 
    	var thisObj = this;
    	var createButtonId = "keys-add-btn";
        var $tmpl = $('html body div.templates').find('#modifyPasswordTmpl').clone();       
        var $rendered = $($tmpl.render($.extend($.i18n.map)));
        var $add_dialog = $rendered.children().first();
        this.addDialog = $add_dialog.eucadialog({
            id: 'keys-add',
            title: credentials_modifypassword,
            width: 500,
            buttons: { 
            // e.g., add : { domid: keys-add-btn, text: "Add new key", disabled: true, focus: true, click : function() { }, keypress : function() { }, ...} 
		    'create' : {
						domid : createButtonId,
						text : button_save,
						disabled : true,
						click : function() {
							var password = $.trim(asText($add_dialog.find('#password').val()));
							var user = $.trim(asText($add_dialog.find('#user').val()));
							var account = thisObj.tableWrapper.innertable('getSelectedRows', 5)[0];
							$add_dialog.eucadialog("close");
							var model = {account: account, user: user, password: password};
							thisObj._modifyPwdAction(model);
							;
						}
					},
			'cancel' : {
						domid : 'keys-cancel-btn',
						text : button_cancel,
						click : function() {
							$add_dialog.eucadialog("close");
						}
					},
				},
          });
        $add_dialog.find("#password").watermark(watermark_input_password);
        $add_dialog.find("#repassword").watermark(watermark_input_repassword);
        $add_dialog.eucadialog('buttonOnKeyupNew', $add_dialog.find('#password'), createButtonId, function(val){
            var password = $.trim($add_dialog.find('#password').val());
            var repassword = $.trim($add_dialog.find('#repassword').val());
            if (!INFRASTRACTURE_NAME_PATTERN.test(password)){
            	thisObj.addDialog.eucadialog('showError',error_msg_infrastracture_name);
            } else if(password != repassword && repassword != '') {
            	thisObj.addDialog.eucadialog('showError',error_msg_confirm_password);
            } else {
            	thisObj.addDialog.eucadialog('showError',null);
            }
            return  INFRASTRACTURE_NAME_PATTERN.test(password) && (password == repassword);
          });
        $add_dialog.eucadialog('buttonOnKeyupNew', $add_dialog.find('#repassword'), createButtonId, function(val){
        	var password = $.trim($add_dialog.find('#password').val());
            var repassword = $.trim($add_dialog.find('#repassword').val());
            if (password != repassword && repassword != ''){
            	thisObj.addDialog.eucadialog('showError',error_msg_confirm_password);
            } else if(!INFRASTRACTURE_NAME_PATTERN.test(password)) {
            	thisObj.addDialog.eucadialog('showError',error_msg_infrastracture_name);
            } else {
            	thisObj.addDialog.eucadialog('showError',null);
            }
            return INFRASTRACTURE_NAME_PATTERN.test(password) && (password == repassword);
          });
    },
    
    _modifyPwdAction: function(model) {
        var thisObj = this;
        $.ajax({
            type:"POST",
            url:"ea.cloudmanagement.CredentialAction$modifyPassword.json",
            data:model,
            dataType:"json",
            async:false,
            success:
              function(data, textStatus, jqXHR){
                if (data) {
                    notifySuccess($.i18n.map.success_msg_modify);
                } else {
                    notifyError($.i18n.map.error_msg_modify);
                }
                thisObj.tableWrapper.innertable('refreshTable');
              },
              error:
              function(jqXHR, textStatus, errorThrown){
                notifyError($.i18n.map.error_msg_modify, getErrorMessage(jqXHR));
              }
         });
    }

  });
})(jQuery,
   window.eucalyptus ? window.eucalyptus : window.eucalyptus = {});
