/**
 * This file was generated by Data Model Tool
 * See <a href="http://www.hna.net/dmt/schema">http://www.hna.net/dmt/schema</a>
 *
 * Copyright (c) 2012 hnair.com
 * All rights reserved.
 * Date: 2012-10-17
 */
package net.owlgroup.ea.init.action;


import javax.annotation.Resource;

import net.owlgroup.ea.init.bean.InitBean;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.alibaba.citrus.service.requestcontext.parser.ParserRequestContext;
import com.alibaba.citrus.turbine.Context;
import com.alibaba.citrus.turbine.dataresolver.Params;
import com.alibaba.citrus.turbine.util.Function;
import com.eucalyptus.admin.EucaAdminConsole;
import com.eucalyptus.admin.EucaAdminConsoleConf;


@Function()
public class InitAction {

    protected Logger logger = LoggerFactory.getLogger(getClass());

    @Resource
    private ParserRequestContext parser;
    @Resource
    private EucaAdminConsole eucaAC;

    @Function("public")
    public void doQuery(Context context,
        @Params InitBean entity) {
        InitBean ib = new InitBean();
        EucaAdminConsoleConf configuration =new EucaAdminConsoleConf();
        String usemock = System.getProperty("api.usemock", "true");
        
        configuration.setClcIp(System.getProperty("api.clcIp", "127.0.0.1"));
        configuration.setClcPort(Integer.valueOf(System.getProperty("api.clcPort", "8773")));
        //System.out.println(clcIp);
        configuration.setAccessKey(System.getProperty("api.accessKey", ""));
        configuration.setSecretKey(System.getProperty("api.secretKey", ""));
        String language = System.getProperty("euca.language", "en_US");
        
        configuration.setClcUser(System.getProperty("api.clcUser", "root"));
        configuration.setClcPassword(System.getProperty("api.clcPassword", ""));
        configuration.setCcDefaultUser(System.getProperty("api.ccDefaultUser", "root"));
        configuration.setCcDefaultUserPassword(System.getProperty("api.ccDefaultUserPassword", "root"));
        
        eucaAC.setConfiguration(configuration);
        //eucaAC.configure(clcIp, Integer.valueOf(clcPort), accessKey, secretKey);
        eucaAC.setUsemock(false);
        ib.setLanguage(language);
        context.put("json", ib);
    }

}