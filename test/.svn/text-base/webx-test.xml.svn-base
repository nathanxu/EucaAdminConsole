<?xml version="1.0" encoding="UTF-8" ?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:services="http://www.alibaba.com/schema/services"
	xmlns:request-contexts="http://www.alibaba.com/schema/services/request-contexts"
	xmlns:basic-interceptors="http://www.alibaba.com/schema/services/request-contexts/basic/interceptors"
	xmlns:parser-filters="http://www.alibaba.com/schema/services/request-contexts/parser/filters"
	xmlns:session-encoders="http://www.alibaba.com/schema/services/request-contexts/session/encoders"
	xmlns:model-encoders="http://www.alibaba.com/schema/services/request-contexts/session/model-encoders"
	xmlns:session-idgens="http://www.alibaba.com/schema/services/request-contexts/session/idgens"
	xmlns:session-stores="http://www.alibaba.com/schema/services/request-contexts/session/stores"
	xmlns:session-interceptors="http://www.alibaba.com/schema/services/request-contexts/session/interceptors"
	xmlns:ml-adapters="http://www.alibaba.com/schema/services/module-loader/adapters"
	xmlns:ml-factories="http://www.alibaba.com/schema/services/module-loader/factories"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
        http://www.alibaba.com/schema/services http://www.alibaba.com/schema/services.xsd
        http://www.alibaba.com/schema/services/request-contexts http://www.alibaba.com/schema/services-request-contexts.xsd
        http://www.alibaba.com/schema/services/request-contexts/basic/interceptors http://www.alibaba.com/schema/services-request-contexts-basic-interceptors.xsd
        http://www.alibaba.com/schema/services/request-contexts/parser/filters http://www.alibaba.com/schema/services-request-contexts-parser-filters.xsd
        http://www.alibaba.com/schema/services/request-contexts/session/encoders http://www.alibaba.com/schema/services-request-contexts-session-encoders.xsd
        http://www.alibaba.com/schema/services/request-contexts/session/idgens http://www.alibaba.com/schema/services-request-contexts-session-idgens.xsd
        http://www.alibaba.com/schema/services/request-contexts/session/stores http://www.alibaba.com/schema/services-request-contexts-session-stores.xsd
        http://www.alibaba.com/schema/services/request-contexts/session/model-encoders http://www.alibaba.com/schema/services-request-contexts-session-model-encoders.xsd
        http://www.alibaba.com/schema/services/request-contexts/session/interceptors http://www.alibaba.com/schema/services-request-contexts-session-interceptors.xsd
        http://www.alibaba.com/schema/services/module-loader/adapters http://www.alibaba.com/schema/services-module-loader-adapters.xsd
        http://www.alibaba.com/schema/services/module-loader/factories http://www.alibaba.com/schema/services-module-loader-factories.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    ">

	<!-- 支持${xxx}替换。 -->
	<services:property-placeholder location="classpath:/bp.properties,classpath:/app.properties">
		<services:property key="component">webx</services:property>
	</services:property-placeholder>

	<beans:import resource="webx/data-source.xml" />

	<!-- 共享配置。 -->
	<!-- <beans:import resource="webx/webx-component-and-root.xml" /> -->

	<!-- 综合设置。 -->
	<services:webx-configuration>
		<!-- 默认将productionMode设为true，建议在jetty插件中设置-DproductionMode=false。 -->
		<services:productionMode>${productionMode:false}</services:productionMode>
		<services:components defaultComponent="app" />
	</services:webx-configuration>

	<!--   异常管道。 
	<beans:import resource="webx/pipeline-exception.xml" />

	资源装载。
	<beans:import resource="webx/resources.xml" />

	URI生成。
	<beans:import resource="webx/uris.xml" /> -->

	<!-- 模板所需要的数据。 -->
	<beans:import resource="webx/bp.xml" />
	<beans:import resource="webx/enum-data.xml" /> 
	 
	
	<!-- 设置request/response/session。 -->
	<services:request-contexts
		xmlns="http://www.alibaba.com/schema/services/request-contexts">
		<basic />
		<buffered />
		<lazy-commit />
		<parser>
		    <property-editor-registrar
				class="com.alibaba.citrus.service.configuration.support.CustomDateRegistrar"
				p:format="yyyy-MM-dd|yyyy-MM-dd HH:mm:ss"  p:locale="zh_CN" p:timeZone="GMT+8" />
			<request-contexts:filters
				xmlns="http://www.alibaba.com/schema/services/request-contexts/parser/filters">
				<uploaded-file-whitelist extensions="${upload.fileWhiteList:jpg, gif, png}" />
			</request-contexts:filters>
		</parser>
		<!-- defaultLocal为空，表示从Request获取 -->
		<set-locale defaultLocale="zh_CN" defaultCharset="UTF-8" />
		<session forceExpirationPeriod="14400" maxInactiveInterval="900" keepInTouch="true">
			<stores>
				<session-stores:cookie-store id="cookieStore">
					<session-stores:cookie name="tmp" />
				</session-stores:cookie-store>
				<session-stores:simple-memory-store id="memStore" />
			</stores>
			<store-mappings>
				<match name="*" store="memStore" />
			</store-mappings>
			<request-contexts:interceptors
				xmlns="http://www.alibaba.com/schema/services/request-contexts/session/interceptors">
				<lifecycle-logger />
				<session-interceptors:interceptor class="com.hnasys.bp.user.listerner.OnLineUserListener" />
				<attribute-whitelist>
					<attribute name="_csrf_token" />
					<attribute name="_lang" />
					<attribute name="webx.UserFunctions" type="java.util.Set" />
					<attribute name="BP.UserId" type="java.lang.String" />
					<attribute name="BP.LoginUser" type="com.hnasys.bp.pub.LoginUser" />
					<attribute name="NtlmHttpChal" />
				</attribute-whitelist>
			</request-contexts:interceptors>
		</session>
	</services:request-contexts>

	<!-- 支持上传文件。 -->
	<services:upload sizeMax="${upload.sizeMax:5M}"  fileSizeMax="${upload.fileSizeMax:2M}" repository="${fileRepo.tmp:D:/tmp/}" sizeThreshold="${upload.sizeThreshold:10K}" keepFormFieldInMemory="true" />

	<!-- 将beans暴露给模板。这里定义的tools可被所有components之间共享。 -->
	<!-- <services:pull xmlns="http://www.alibaba.com/schema/services/pull/factories">
		<utils />
		<page-tool />
		<control-tool />
		<uris-tool />
	</services:pull> -->

	<!-- 装载模块。 -->
	<services:module-loader/>
	<!-- 增加加载dao and service bean -->
    <context:component-scan base-package="com.hnasys">
        <context:include-filter type="regex" expression=".*Dao" />
        <context:include-filter type="regex" expression=".*DaoImpl" />
        <context:include-filter type="regex" expression=".*Service" />
        <context:include-filter type="regex" expression=".*ServiceImpl" />
    </context:component-scan>
    
</beans:beans>
